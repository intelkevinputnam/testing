<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<!-- Generated by Sphinx Dita Writer 0.16 -->
<topic xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="find-hotspots-l2-cache" xml:lang="en-US" outputclass="no-rel-links" ditaarch:DITAArchVersion="1.2" class="- topic/topic ">
    <title class="- topic/title ">Find Hotspots (L2 Cache)</title>
    <body>
        <div id="tcc-vtune-find-hotspots-l2-cache"/>
        <div id="find-hotspots-l2-cache">
            <p>The following steps show how to find hotspots at the L2 cache level.</p>
            <p>As an example, the tutorial uses the sample application,
            <codeph>tcc_cache_allocation_sample</codeph>. Although this sample is already tuned
            with the cache allocation library, it can simulate an untuned application
            when configured to allocate the buffer in DRAM.</p>
            <p>First, you will run the sample using DRAM and observe the number of cache misses. Then you will run the sample again, using a buffer in L2 cache. You can expect to see fewer cache misses.</p>
            <note>
                <p>The following example is for illustration purposes only; your results may vary.</p>
            </note>
            <div id="run-the-sample-using-dram-baseline">
                <p outputclass="h2"><b>Run the Sample Using DRAM (Baseline)</b></p>
                <ol>
                    <li>
                        <p>Make sure that you can ssh from your host system to the target
                        system. Run <codeph>ifconfig</codeph> on the target to get the IP address.</p>
                    </li>
                    <li>
                        <p>On the target system, open a terminal window and run the Linux* tool
                        stress-ng as a noisy neighbor (command varies by platform):</p>
                        <ul>
                            <li>
                                <p>For Elkhart Lake:</p>
                                <codeblock>taskset -c 2 stress-ng -C 10 --cache-level 2</codeblock>
                            </li>
                            <li>
                                <p>For Tiger Lake UP3:</p>
                                <codeblock>taskset -c 3 stress-ng -C 10 --cache-level 2</codeblock>
                            </li>
                        </ul>
                    </li>
                    <li>
                        <p>On the host system,
                        <xref scope="local" format="dita" href="../tcc_vtune_launch_vtune.xml#tcc-vtune-launch-vtune" class="- topic/xref ">launch Intel® VTune™ Profiler</xref>
                        and <xref scope="local" format="dita" href="../tcc_vtune_create_project.xml#tcc-vtune-create-project" class="- topic/xref ">create a project</xref>.</p>
                    </li>
                    <li>
                        <p>In the WHERE section, specify the target system as follows:</p>
                        <ol>
                            <li>
                                <p>Click the                                 <image href="../../_images/tcc_vtune_browse_icon.png">
                                    <alt>browse</alt>
                                </image>
 <b>Browse</b> button.</p>
                            </li>
                            <li>
                                <p>Select <b>Remote Linux (SSH)</b>.</p>
                            </li>
                            <li>
                                <p>For <b>SSH destination</b>, specify the address of the target system
                                <b>root@&lt;IP address&gt;</b> OR <b>root@&lt;hostname&gt;</b>.</p>
                                <image href="../../_images/tcc_vtune_remote_linux_ssh.png">
                                    <alt></alt>
                                </image>
                            </li>
                        </ol>
                    </li>
                    <li>
                        <p>In the WHAT section, specify the following information to run the sample:</p>
                        <ol>
                            <li>
                                <p>For <b>Application</b>, type <b>tcc_cache_allocation_sample</b>.</p>
                            </li>
                            <li>
                                <p>For <b>Application parameters</b>, type <codeph>--latency 450 --sleep 100000000</codeph>
                                for Elkhart Lake or <codeph>--latency 5000 --sleep 100000000</codeph> for Tiger Lake UP3.</p>
                                <image href="../../_images/tcc_vtune_launch_app_dram.png">
                                    <alt></alt>
                                </image>
                            </li>
                        </ol>
                    </li>
                    <li>
                        <p>When the HOW section is visible, configure the analysis as follows:</p>
                        <ol>
                            <li>
                                <p>Click the                                 <image href="../../_images/tcc_vtune_browse_icon.png">
                                    <alt>browse</alt>
                                </image>
 <b>Browse</b> button.</p>
                            </li>
                            <li>
                                <p>Under <b>Microarchitecture</b>, select <b>Memory Access</b>.</p>
                                <image href="../../_images/tcc_vtune_microarchitecture_memory_access.png">
                                    <alt></alt>
                                </image>
                            </li>
                            <li>
                                <p>Click the                                 <image href="../../_images/tcc_vtune_copy_icon.png">
                                    <alt>copy</alt>
                                </image>
 <b>Copy</b> button to customize the analysis.</p>
                            </li>
                            <li>
                                <p>Select <b>Collect stacks</b>:</p>
                                <image href="../../_images/tcc_vtune_collect_stacks.png">
                                    <alt></alt>
                                </image>
                            </li>
                            <li>
                                <p><b>Optional:</b> Select <b>Analyze memory bandwidth</b> to collect the
                                events required to compute memory bandwidth.</p>
                                <image href="../../_images/tcc_vtune_analyze_memory_bandwidth.png">
                                    <alt></alt>
                                </image>
                            </li>
                            <li>
                                <p>Under <b>Events configured for CPU</b>, select
                                <b>MEM_LOAD_UOPS_RETIRED.L2_MISS</b> for Elkhart Lake
                                or <b>MEM_LOAD_RETIRED.L2_MISS</b> for Tiger Lake UP3
                                and set <b>Sample After</b> to <b>100</b>.</p>
                                <image href="../../_images/tcc_vtune_mem_load_uops_retired.png">
                                    <alt></alt>
                                </image>
                            </li>
                            <li>
                                <p><b>Optional:</b> Select <b>Analyze loops</b> to collect advanced
                                information such as instruction set usage, and display analysis
                                results by loops and functions.</p>
                                <image href="../../_images/tcc_vtune_analyze_loops.png">
                                    <alt></alt>
                                </image>
                            </li>
                            <li>
                                <p>Scroll down and select <b>Analyze memory objects</b>.</p>
                                <image href="../../_images/tcc_vtune_memory_objects.png">
                                    <alt></alt>
                                </image>
                            </li>
                        </ol>
                    </li>
                    <li>
                        <p>Click the                         <image href="../../_images/tcc_vtune_start_icon.png">
                            <alt>start</alt>
                        </image>
 <b>Start</b> button to run the analysis.</p>
                    </li>
                    <li>
                        <p>Go to the <b>Event Count</b> tab.</p>
                    </li>
                    <li>
                        <p>Maximize the screen if it is smaller than the full size of your monitor.</p>
                    </li>
                    <li>
                        <p>At the top of the screen, find the <b>MEM_LOAD_UOPS_RETIRED.L2_MISS</b>
                        or <b>MEM_LOAD_RETIRED.L2_MISS</b>
                        column. Click the column to sort the rows by number of cache misses.
                        In this example, the function <codeph>run_workload_and_measure_cycles</codeph> is
                        at the top of the list with 16,300 misses, which means the function
                        is the hotspot for this type of event, and the buffer is a candidate
                        for the cache allocation library.</p>
                        <image href="../../_images/tcc_vtune_call_stack_l2_before.png">
                            <alt></alt>
                        </image>
                    </li>
                    <li>
                        <p>Now follow the instructions below to run the sample using the cache
                        allocation library to allocate a buffer in L2 cache. Compare the results.</p>
                    </li>
                </ol>
            </div>
            <div id="run-the-sample-using-l2-cache">
                <p outputclass="h2"><b>Run the Sample Using L2 Cache</b></p>
                <ol>
                    <li>
                        <p>At the top left of the screen, click the                         <image href="../../_images/tcc_vtune_configure_icon.png">
                            <alt>configure</alt>
                        </image>

                        <b>Configure Analysis</b> button.</p>
                    </li>
                    <li>
                        <p>In the WHAT section, change the <b>Application parameters</b> to
                        <codeph>--latency 250 --sleep 100000000</codeph> for Elkhart Lake or <codeph>--latency 80 --sleep 100000000</codeph> for Tiger Lake UP3. This command allocates the buffer in L2 cache.</p>
                        <image href="../../_images/tcc_vtune_launch_app_l2.png">
                            <alt></alt>
                        </image>
                    </li>
                    <li>
                        <p>Click the                         <image href="../../_images/tcc_vtune_start_icon.png">
                            <alt>start</alt>
                        </image>
 <b>Start</b> button to run the analysis.</p>
                    </li>
                    <li>
                        <p>After the analysis is complete, go to the <b>Event Count</b> tab.</p>
                    </li>
                    <li>
                        <p>By using an L2 cache buffer, the number of cache misses for
                        <codeph>run_workload_and_measure_cycles</codeph> is lower.</p>
                        <image href="../../_images/tcc_vtune_call_stack_l2_after.png">
                            <alt></alt>
                        </image>
                    </li>
                </ol>
            </div>
        </div>
    </body>
</topic>
